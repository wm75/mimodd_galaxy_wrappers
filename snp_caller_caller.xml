<tool id="mimodd_varcall" name="MiModD Variant Calling"
version="@MIMODD_WRAPPER_VERSION@">
    <description>
    generates a BCF file of position-specific variant likelihoods and coverage information based on a reference sequence and reads aligned against it
    </description>
    <macros>
        <import>macros.xml</import>
        <macro name="test_mentions_samples">
            <assert_stdout>
                <has_text_matching expression="000.+N2" />
                <has_text_matching expression="266-1.+ot266" />
            </assert_stdout>
        </macro>
    </macros>
    <expand macro="requirements" />
    <expand macro="stdio" />
    <expand macro="version_command" />
    <command><![CDATA[
	mimodd varcall '$ref_genome'
	  #for $input_file in $list_input
        '$input_file'
      #end for
        --index-files 
      #for $input_file in $list_input
        '${input_file.metadata.bam_index}'
      #end for
	    --ofile '$ofile'
        --depth $depth
	    $group_by_id
	    $no_md5_check
        --verbose
        --quiet
    ]]></command>

    <inputs>
        <param name="ref_genome" type="data" format="fasta" label="reference genome" />
        <param name="list_input" type="data" multiple="true" format="bam"
        label="Aligned reads input dataset(s)"
        help="Select at least one dataset to call variants on. If you select several datasets or a dataset collection, this tool will perform joint variant calling on all of them and produce a single, though possibly multisample, output dataset." />
        <param name="group_by_id" type="boolean" truevalue="-i" falsevalue="" checked="false" 
        label="group reads based on read group id only" 
        help="If selected, this option ensures that only the read group id (but not the sample name) is considered in grouping reads in the input file(s). If turned off, read groups with identical sample names are automatically pooled and analyzed together even if they come from different NGS runs." />
        <param name="no_md5_check" type="boolean" truevalue="-x" falsevalue="" checked="false" 
        label="turn off md5 sum verification" 
        help="leave turned on to avoid accidental variant calling against a wrong reference genome version (see the tool help below)." />
        <param name="depth" type="integer" value="250" 
        label="maximum per-BAM depth (default: 250)" 
        help="to avoid excessive use of memory"/>
    </inputs>

    <outputs>
        <data name="ofile" format="bcf" 
        label="Variant Calls from MiModd Variant Calling on ${on_string}"/>
    </outputs>

    <tests>
        <test>
            <param name="ref_genome" value="a.fa" />
            <param name="list_input" value="a.bam" />
            <expand macro="test_mentions_samples" />
        </test>
        <test>
            <param name="ref_genome" value="a.fa" />
            <param name="list_input" value="a_part1.bam,a_part2.bam" />
            <expand macro="test_mentions_samples" />
        </test>
        <test>
            <param name="ref_genome" value="a.fa" />
            <param name="list_input" value="a.bam" />
            <param name="group_by_id" value="true" />
            <param name="no_md5_check" value="true" />
            <param name="depth" value="1000" />
            <assert_command>
                <has_text text="-i" />
                <has_text text="-x" />
                <has_text text="--depth 1000" />
            </assert_command>
        </test>
    </tests>
    <help><![CDATA[
.. class:: infomark

   **What it does**

The tool transforms the read-centered information of its aligned reads input files into position-centered information.

**It produces a BCF file that serves as the basis for all further variant analyses with MiModD**.

**Notes:**

By default, the tool will check whether the input BAM file(s) provide(s) MD5 checksums for the reference genome sequences used during read alignment (the *SNAP Read Alignment* tool stores these in the BAM file header). If it finds MD5 sums for all sequences, it will compare them to the actual checksums of the sequences in the specified reference genome and 
check that every sequence mentioned in any BAM input file has a counterpart with matching MD5 sum in the reference genome and abort with an error message if that is not the case. If it finds sequences with matching checksum, but different names in the reference genome, it will use the name from the reference genome file in its output.

This behavior has two benefits:

1) It protects from accidental variant calling against a wrong reference genome (i.e., a different one than that used during the alignment step), which would result in wrong calls. This is the primary reason why we recommend to leave the check activated

2) It provides an opportunity to change sequence names between aligned reads files and variant call files by providing a reference genome file with altered sequence names (but identical sequence data).

Since there may be rare cases where you *really* want to align against a reference genome with different checksums (e.g., you may have edited the reference sequence based on the alignment results), the check can be turned off, but only do this if you know exactly why.

-----------

Internally, the tool uses samtools mpileup combined with bcftools to do all per-nucleotide calculations. 

It exposes just a single configuration parameter of these tools - the *maximum per-BAM depth*. Through this parameter, the maximum number of reads considered for variant calling at any site can be controlled. Its default value of 250 is taken from *samtools mpileup* and usually suitable. Consider, however, that this gives the maximum read number per input file, so if you have a large number of samples in one input file, it could become necessary to increase the value to get sufficient reads considered per sample.

@HELP_FOOTER@
    ]]></help>
    <expand macro="citations" />
</tool>
