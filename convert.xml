<tool id="mimodd_convert" name="MiModD Convert" version="@MIMODD_WRAPPER_VERSION@">
    <description>converts sequence data into different formats</description>
    <macros>
        <import>macros.xml</import>
        <macro name="to_format">
            <param name="oformat" type="select" label="to">
            	<option value="sam">sam</option>
	            <option value="bam">bam</option>
	            <yield />
	        </param>
        </macro>
        <macro name="sam_bam_selector" token_format="sam">
            <param name="input_data" type="data" format="@FORMAT@"
            label="input dataset"/>
            <param name="header" type="hidden" value="None"/>
            <param name="split_on_rgs" type="boolean" truevalue="--split-on-rgs" falsevalue="" checked="false"
            label="Split output based on read group IDs"
            help="If the input file contains reads from different read groups, write them to separate output files; implied automatically for conversions to fastq and gzipped fastq format"/>
        </macro>
        <macro name="se_selector" token_format="fastq">
            <conditional name="input">
                <param name="repr" type="select"
                label="Single-end input data provided as">
                    <option value="individual">Individual datasets</option>
                    <option value="collection">Collection of datasets</option>
                </param>
                <when value="individual">
                    <repeat name="input_data" title="fastq input datasets"
                    default="1" min="1">
	                    <param name="file1" type="data" format="@FORMAT@"
	                    label="single-end read data"/>
                    </repeat>
                </when>
                <when value="collection">
                    <param name="input_data" type="data_collection"
                    collection_type="list" format="@FORMAT@"
                    label="collection of single-end read input datasets" /> 
                </when>
            </conditional>
        </macro>
        <macro name="pe_selector" token_format="fastq">
            <conditional name="input">
                <param name="repr" type="select"
                label="Paired-end input data provided as">
                    <option value="individual">Individual datasets</option>
                    <option value="collection">Paired collection</option>
                    <option value="list_of_pairs">List of pairs</option>
                </param>
                <when value="individual">
                    <repeat name="input_data" title="fastq input datasets"
                    default="1" min="1">
	                    <param name="file1" type="data" format="@FORMAT@"
	                    label="first set of reads of paired-end data"/>
	                    <param name="file2" type="data" format="@FORMAT@"
	                    label="second set of reads of paired-end data"/>
                    </repeat>
                </when>
                <when value="collection">
                    <param name="input_data" type="data_collection"
                    collection_type="paired" format="@FORMAT@"
                    label="paired input dataset collection" /> 
                </when>
                <when value="list_of_pairs">
                    <param name="input_data" type="data_collection"
                    collection_type="list:paired" format="@FORMAT@"
                    label="nested collection of paired input datasets" />
                </when>
            </conditional>
        </macro>
    </macros>
    <expand macro="requirements" />
    <expand macro="stdio" />
    <expand macro="version_command" />
    <command><![CDATA[
    #if $str($mode.split_on_rgs) or $str($mode.oformat) == "fastq" or $str($mode.oformat) == "gz":
      mkdir converted_data &&
    #end if
  
	mimodd convert 
      #if $str($mode.iformat) in ("sam", "bam"):
          '${input_data}'
      #else if $str($mode.iformat) in ("fastq_pe", "gz_pe"):
        #if $str($mode.input.repr) == "collection":
          '$mode.input.input_data.forward' '$mode.input.input_data.reverse'
        #else
          #for $i in $mode.input.input_data
            #if $str($mode.input.repr) == "individual":
              '${i.file1}' '${i.file2}'
            #else
              '$i.forward' '$i.reverse'
            #end if
          #end for
        #end if
      #else
        #for $i in $mode.input.input_data
          #if $str($mode.input.repr) == "collection":
            '$i'
          #else
            '${i.file1}'
          #end if
        #end for
      #end if
	  #if $str($mode.header) != "None":  	
		--header '$(mode.header)'
	  #end if
      #if $str($outputname) == "None":
	    --ofile converted_data/read_group
	  #else
	    --ofile '$outputname'
	  #end if
	  --iformat $(mode.iformat)
	  --oformat $(mode.oformat)
	  ${mode.split_on_rgs}
    ]]></command>
  
    <inputs>
        <conditional name="mode">
	        <param name="iformat" type="select" label="Convert from"
	        help="Your choice will update the interface to display further choices appropriate for your type of input data.">
        	    <option value="fastq">fastq: single-end (one file)</option>
	            <option value="fastq_pe">fastq: paired-end (two files)</option>
	            <option value="gz">gzip compressed fastq: single-end (one file)</option>
	            <option value="gz_pe">gzip compressed fastq: paired-end (two files)</option>
	            <option value="sam">sam</option>
	            <option value="bam">bam</option>
            </param>	
            <when value="fastq">
                <expand macro="to_format" />
                <expand macro="se_selector" format="fastq" />
                <param name="header" type="data" format="sam" label="Use Header File"
                help="A SAM file with header information, as generated, for example, by the NGS Run Annotation Tool, that will be used to attach metainformation to the results file."/>
                <param name="split_on_rgs" type="hidden" value=""/>	    
	        </when>
            <when value="gz">
	            <expand macro="to_format" />
	            <expand macro="se_selector" format="data" />
	            <param name="header" type="data" format="sam" label="Use Header File"
                help="A SAM file with header information, as generated, for example, by the NGS Run Annotation Tool, that will be used to attach metainformation to the results file."/>
                <param name="split_on_rgs" type="hidden" value=""/>
	        </when>
	        <when value="fastq_pe">
	            <expand macro="to_format" />
                <expand macro="pe_selector" format="fastq" />
                <param name="header" type="data" format="sam" label="Use Header File"
                help="A SAM file with header information, as generated, for example, by the NGS Run Annotation Tool, that will be used to attach metainformation to the results file."/>
                <param name="split_on_rgs" type="hidden" value=""/>
	        </when>
	        <when value="gz_pe">
	            <expand macro="to_format" />
                <expand macro="pe_selector" format="data" />
                <param name="header" type="data" format="sam" label="Use Header File"
                help="A SAM file with header information, as generated, for example, by the NGS Run Annotation Tool, that will be used to attach metainformation to the results file."/>
                <param name="split_on_rgs" type="hidden" value=""/>
	        </when>
	        <when value="sam">
	            <expand macro="to_format">
	                <option value="fastq">fastq</option>
	                <option value="gz">gzipped fastq</option>
	            </expand>
	            <expand macro="sam_bam_selector" format="sam" />
	        </when>
	        <when value="bam">
	            <expand macro="to_format">
	                <option value="fastq">fastq</option>
	                <option value="gz">gzipped fastq</option>
	            </expand>
	            <expand macro="sam_bam_selector" format="bam" />
	        </when>
        </conditional>
    </inputs>
  
    <outputs>
        <data name="outputname" format="bam"
        label="Converted reads from MiModd ${tool.name} on ${on_string}">
	        <change_format>
	            <when input="mode.oformat" value="sam" format="sam" />
	        </change_format>
	        <filter>
	            (not mode['split_on_rgs'] and mode['oformat'] not in ("fastq", "gz"))
	        </filter>
        </data>
        <collection name="output_split_on_read_groups" type="list"
        label="MiModD ${tool.name} run on ${on_string}">
            <discover_datasets pattern="__designation_and_ext__"
            directory="converted_data" />
	        <filter>
	            (mode['split_on_rgs'] or mode['oformat'] in ("fastq", "gz"))
	        </filter>
        </collection>
    </outputs>

    <tests>
        <test expect_num_outputs="1">
            <conditional name="mode">
                <param name="iformat" value="fastq" />
                <param name="oformat" value="bam" />
                <conditional name="input">
                    <param name="repr" value="individual" />
                    <repeat name="input_data">
                        <param name="file1"
                        value="split_pair_reads_1.fastqsanger" />
                    </repeat>
                </conditional>
                <param name="header" value="header_only.sam" />
            </conditional>
            <output name="outputname" file="reads_1_w_header.bam"
            ftype="bam" />
        </test>
        <test expect_num_outputs="1">
            <conditional name="mode">
                <param name="iformat" value="fastq_pe" />
                <param name="oformat" value="bam" />
                <conditional name="input">
                    <param name="repr" value="individual" />
                    <repeat name="input_data">
                        <param name="file1"
                        value="split_pair_reads_1.fastqsanger" />
                        <param name="file2"
                        value="split_pair_reads_2.fastqsanger" />
                    </repeat>
                </conditional>
                <param name="header" value="header_only.sam" />
            </conditional>
            <output name="outputname" file="reads_1and2_w_header.bam"
            ftype="bam" />
        </test>
        <test expect_num_outputs="1">
            <conditional name="mode">
                <param name="iformat" value="fastq_pe" />
                <param name="oformat" value="bam" />
                <conditional name="input">
                    <param name="repr" value="collection" />
                    <param name="input_data">
                        <collection type="paired">
                            <element name="forward"
                            value="split_pair_reads_1.fastqsanger" />
                            <element name="reverse"
                            value="split_pair_reads_2.fastqsanger" />
                        </collection>
                    </param>
                </conditional>
                <param name="header" value="header_only.sam" />
            </conditional>
            <output name="outputname" file="reads_1and2_w_header.bam" ftype="bam" />
        </test>
        <test expect_num_outputs="1">
            <conditional name="mode">
                <param name="iformat" value="bam" />
                <param name="oformat" value="sam" />
                <param name="input_data" value="a.bam" />
            </conditional>
            <output name="outputname" file="a.sam" ftype="sam" />
        </test>
        <test>
            <conditional name="mode">
                <param name="iformat" value="sam" />
                <param name="oformat" value="bam" />
                <param name="input_data" value="a.sam" />
                <param name="split_on_rgs" value="true" />
            </conditional>
            <output_collection name="output_split_on_read_groups" type="list" count="2">
                <element name="read_group_000" file="a_part1.bam" ftype="bam" />
            </output_collection>
        </test>
    </tests>
    
    <help><![CDATA[
.. class:: infomark

   **What it does**

The tool converts between different file formats used for storing next-generation sequencing data.

As input file types it can handle uncompressed or gzipped fastq, SAM or BAM format, which it can convert to SAM or BAM format.

**Notes:**

1) In its standard configuration Galaxy will decompress any .gz files during their upload, so the option to convert gzipped fastq input is useful only with customized Galaxy instances or by using linked files as explained in our `recipe for using gzipped fastq files in Galaxy`_ .

2) The tool can convert fastq files representing data from paired-end sequencing runs to appropriate SAM/BAM format provided that the mate information is split over two fastq files in corresponding order.

   **TIP:** If your paired-end data is arranged differently, you may look into the *fastq splitter* and *fastq de-interlacer* tools for Galaxy from the `Fastq Manipulation category`_ of the Galaxy Tool Shed to see if they can convert your files to the expected format.
   
3) Merging partial fastq (or gzipped fastq) files into a single SAM/BAM file is supported both for single-end and paired-end data. Simply add additional input datasets and select the appropriate files (pairs of files in case of paired-end data).

   Concatenation of SAM/BAM file during conversion is currently not supported.

4) For input in fastq format a SAM header file providing run metadata **has to be specified**. The information in this file will be used as the header data of the new SAM/BAM file. You can use the *NGS Run Annotation* tool to generate a new header file for your data.

   For input in SAM/BAM format the tool will simply copy the existing header data to the new file. To modify the header of an existing SAM/BAM file, use the *Reheader BAM file* tool instead.

.. _Fastq Manipulation category: https://toolshed.g2.bx.psu.edu/repository/browse_repositories_in_category?id=310ff67d4caf6531
.. _recipe for using gzipped fastq files in Galaxy: http://mimodd.readthedocs.org/en/latest/recipes.html#use-gzipped-fastq-files-in-galaxy
.. _MiModD user guide: http://mimodd.readthedocs.org/en/latest

@HELP_FOOTER@
    ]]></help>
    <expand macro="citations" />
</tool>
